server.port = 8080

spring.datasource.url = jdbc:mysql://${DB_HOST:localhost}:3306/dictionary-service
spring.datasource.username = root
spring.datasource.password = root

spring.application.name = dictionary-service
#eureka.client.service-url.defaultZone = http://localhost:8761/eureka

#
management.server.port = 8888
#Enable health indicators for Circuit Breakers
management.health.circuitbreakers.enabled = true

#Expose all endpoints for web access
management.endpoints.web.exposure.include = *

#Show detailed health information in the /health endpoint response
management.endpoint.health.show-details = always


#Resilience4J Properties
resilience4j.circuitbreaker.instances.translation.registerHealthIndicator = true
resilience4j.circuitbreaker.instances.translation.event-consumer-buffer-size = 10
resilience4j.circuitbreaker.instances.translation.slidingWindowType = count_based
resilience4j.circuitbreaker.instances.translation.slidingWindowSize = 2
resilience4j.circuitbreaker.instances.translation.failureRateThreshold = 50
resilience4j.circuitbreaker.instances.translation.waitDurationInOpenState = 5s
resilience4j.circuitbreaker.instances.translation.permittedNumberOfCallsInHalfOpenState = 3
resilience4j.circuitbreaker.instances.translation.automaticTransitionFromOpenToHalfOpenEnabled = true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.translation.timeout-duration = 40s

#Resilience4J Retry Properties
resilience4j.retry.instances.translation.max-attempts = 3
resilience4j.retry.instances.translation.wait-duration = 1s
#(http://host.docker.internal:8080/actuator/retryevents)


spring.config.import=configserver:http://${CONFIG_SERVER_HOST:localhost}:9296

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]